(
  principal "r7inp-6aaaa-aaaaa-aaabq-cai", // test canister
  record {
    collectionName = $collectionName;
    collectionSize = $collectionSize;
    salePrice = $salePrice;
    publicSaleStart = $publicSaleStart;
    whitelistTime = $whitelistTime;
    placeholderContentLength = "1053832";
    salesDistribution = vec {
      record { $beneficiary0; $salesDistribution0 };
      record { $beneficiary1; $salesDistribution1 };
    };
    royalties = vec {
      record { $beneficiary0; $royalty0 };
      record { $beneficiary1; $royalty1 };
    };
    marketplaces = vec {
      record { $marketplace0_name; $marketplace0_addr; $marketplace0_fee };
      record { $marketplace1_name; $marketplace1_addr; $marketplace1_fee };
      record { $marketplace2_name; $marketplace2_addr; $marketplace2_fee };
    };
    openEdition = $openEdition;
    saleEnd = $saleEnd;
    // How long to delay assets shuffling and reveal (starting after 'publicSaleStart')
    // 0 - assets will be revealed immediately and assets shuffling will be disabled
    revealDelay = $revealDelay;
    singleAssetCollection = $singleAssetCollection;
    // dutch auction
    // dutchAuction = opt record {
    //   target = $dutchAuctionFor;
    //   startPrice = $dutchAuctionStartPrice; // start price for dutch auction
    //   intervalPriceDrop = $dutchAuctionIntervalPriceDrop; // drop price every interval
    //   reservePrice = $dutchAuctionReservePrice; // reserve price
    //   interval = $dutchAuctionInterval; // nanoseconds
    // };
    // airdrop
    airdrop = $airdrop;
    // whitelist
    whitelistOneTimeOnly = $whitelistOneTimeOnly; // Whitelist addresses are removed after purchase
    whitelistDiscountLimited = $whitelistDiscountLimited; // If the whitelist discount is limited to the whitelist period only. If no whitelist period this is ignored
    whitelistTiers = vec {
      record {
        name = $whitelistTier0Name;
        price = $whitelistTier0Price;
        whitelist = $whitelistTier0Whitelist;
        slot = record {
          start = $whitelistSlot1_start;
          end = $whitelistSlot1_end;
        };
      };
      record {
        name = $whitelistTier1Name;
        price = $whitelistTier1Price;
        whitelist = $whitelistTier1Whitelist;
        slot = record {
          start = $whitelistSlot2_start;
          end = $whitelistSlot2_end;
        };
      };
    };
    marketDelay = opt $marketDelay;
    escrowDelay = opt $escrowDelay;
    test = opt $test; // must be 'false'
    restoreEnabled = opt $restoreEnabled; // must be 'false' (see backup/README.md for details)
    timersInterval = opt variant { seconds = $timersInterval };
  }
)